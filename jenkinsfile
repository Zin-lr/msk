pipeline {
    agent any

    environment {
        DOCKER_IMAGE = "springcloud/spring-cloud-dataflow-server:2.11.2-SNAPSHOT"
        AWS_REGION = 'us-east-1'
        ECR_REPO = 'jenkinsrepo'
        TAG = 'latest' // Specify the tag you want to use for the image
    }

    stages {
        stage('Docker Build') {
            steps {
                script {
                    docker.build(DOCKER_IMAGE)
                }
            }
        }
        stage('Tag Docker Image') {
            steps {
                script {
                    // Tag the Docker image
                    sh "docker tag ${DOCKER_IMAGE} 339713000514.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${TAG}"
                }
            }
        }
        stage('Login to ECR') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'AWS_credentials', passwordVariable: 'AWS_SECRET_ACCESS_KEY', usernameVariable: 'AWS_ACCESS_KEY_ID')]) {
                    script {
                        // Get the ECR login command
                        sh '''
                        aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin 339713000514.dkr.ecr.${AWS_REGION}.amazonaws.com
                        '''
                    }
                }
            }
        }

        stage('Push Docker Image to ECR') {
            steps {
                script {
                    // Push the Docker image to ECR
                    sh '''
                    IMAGE_URI=339713000514.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO}:${TAG}
                    docker push $IMAGE_URI
                    '''
                }
            }
        }
    }
}
